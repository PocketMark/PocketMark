{"ast":null,"code":"var _jsxFileName = \"/Users/YouHeeSun/Desktop/Spring/workspace/PocketMark/pocketmark_frontend/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../css/LoginForm.css';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router\";\nimport Home from \"./pages/Home\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  const [info, setInfo] = useState({\n    userId: '',\n    userPw: ''\n  });\n  const [hiddenConfig, setConfig] = useState(true);\n  const navigate = useNavigate();\n  const cookies = new Cookies();\n  let csrfToken = cookies.get('XSRF-TOKEN');\n  console.log(\"befroe req\");\n  console.log(csrfToken);\n\n  const loginClick = props => {\n    console.log(\"#CRSF TOKEN\");\n    console.log(csrfToken);\n    axios.defaults.headers.common['TESTHEADER'] = 'TESTINNNNNG';\n    axios.defaults.headers.common['Set-Cookie'] = `XSRF-TOKEN=${csrfToken};`; // axios.defaults.xsrfCookieName ='Set-Cookie';\n    // axios.defaults.xsrfHeaderName ='XSRF-TOKEN';\n\n    axios.post(`http://localhost:9090/api/login`, info).then(res => {\n      console.log(res.headers);\n\n      if (res.data === true) {\n        navigate('/', {\n          state: {\n            isLogin: true\n          }\n        });\n      } else {\n        setConfig(false);\n      }\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {});\n  };\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const nextInputs = { ...info,\n      [name]: value\n    };\n    setInfo(nextInputs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"off\",\n      type: \"text\",\n      id: \"id\",\n      onChange: onChange,\n      name: \"userId\",\n      placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      className: \"input-id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      autoComplete: \"off\",\n      type: \"text\",\n      id: \"pw\",\n      onChange: onChange,\n      name: \"userPw\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n      className: \"input-pw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), !hiddenConfig && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"state\",\n      children: \"\\uC544\\uC774\\uB514\\uB098 \\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC798\\uBABB \\uC785\\uB825\\uD558\\uC168\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"login-btn\",\n      onClick: loginClick,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"Mgy/wg6Jg+8eq3oQsGU76mWrjiY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/YouHeeSun/Desktop/Spring/workspace/PocketMark/pocketmark_frontend/src/components/LoginForm.js"],"names":["React","useState","axios","useNavigate","Home","Cookies","LoginForm","info","setInfo","userId","userPw","hiddenConfig","setConfig","navigate","cookies","csrfToken","get","console","log","loginClick","props","defaults","headers","common","post","then","res","data","state","isLogin","catch","error","finally","onChange","e","name","value","target","nextInputs"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport '../css/LoginForm.css';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router\";\nimport Home from \"./pages/Home\";\nimport Cookies from \"universal-cookie\";\n\n\n\n\n\nfunction LoginForm(){\n    const [info, setInfo] = useState({userId:'',userPw:''});\n    const [hiddenConfig, setConfig] = useState(true);\n    const navigate = useNavigate();\n    const cookies = new Cookies();\n    let csrfToken = cookies.get('XSRF-TOKEN');\n    console.log(\"befroe req\")\n    console.log(csrfToken);\n    \n\n    const loginClick = (props)=>{\n        console.log(\"#CRSF TOKEN\");\n        console.log(csrfToken);\n        axios.defaults.headers.common['TESTHEADER']='TESTINNNNNG';\n        axios.defaults.headers.common['Set-Cookie']=`XSRF-TOKEN=${csrfToken};`;\n        // axios.defaults.xsrfCookieName ='Set-Cookie';\n        // axios.defaults.xsrfHeaderName ='XSRF-TOKEN';\n        axios.post(`http://localhost:9090/api/login`,info)\n        .then((res)=>{\n            console.log(res.headers);\n            if(res.data === true){\n                navigate('/',{state:{isLogin:true}});\n            }else{\n                setConfig(false);\n            }\n        })\n        .catch((error)=>{console.log(error);})\n        .finally(()=>{});  \n    };\n\n    const onChange = (e)=>{\n        const {name, value} = e.target;\n        const nextInputs={\n            ...info,\n            [name] :value,\n        }\n        setInfo(nextInputs);\n    };\n\n\n    return(\n        <div className=\"login-container\">\n            <input autoComplete=\"off\" type='text' id=\"id\" onChange={onChange} name=\"userId\" placeholder=\"아이디를 입력해주세요\" className=\"input-id\"></input>\n            <input autoComplete=\"off\" type='text' id=\"pw\" onChange={onChange} name=\"userPw\" placeholder=\"비밀번호를 입력해주세요\" className=\"input-pw\"></input>\n            {!hiddenConfig&&<p className=\"state\">아이디나 비밀번호를 잘못 입력하셨습니다.</p>}\n            <button className=\"login-btn\" onClick={loginClick}>로그인</button>\n        </div>\n\n    );\n\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}